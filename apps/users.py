import streamlit as st
import streamlit_authenticator as stauth
from .database_utils import add_data, init_connection

names = ['–ö–∞—Ç—è –¢–∞–∫—Ç–∞—à–µ–≤–∞', '–ö–∞—Ç—è –í–æ–ª–æ—à–∏–Ω–∞']
usernames = ['tak_ty', 'vokat']
passwords = ['123', '456']
hashed_passwords = stauth.Hasher(passwords).generate()
authenticator = stauth.Authenticate(names, usernames, hashed_passwords,
    'some_cookie_name', 'some_signature_key', cookie_expiry_days=30)

def app():
    name, authentication_status, username = authenticator.login('Login', 'main')
    if authentication_status:
        st.write('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, *%s*' % name)
        db = init_connection()
        col1, col2 = st.columns([1, 8])
        with col2:
            st.header('–†–µ–¥–∞–∫—Ç–æ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
        with col1:
            st.markdown(
                "<h1 style='text-align: center; font-size: 300%'>üíª</h1>",
                unsafe_allow_html=True)
        upload_file = st.file_uploader('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª')
        if (upload_file is not None) and upload_file.name.endswith(".csv"):
            add_data(db, upload_file)
        else:
            st.markdown('–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–∞–π–ª')
    elif authentication_status == False:
        st.error('Username/password is incorrect')
    elif authentication_status == None:
        st.warning('Please enter your username and password')