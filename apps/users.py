import streamlit as st
import pandas as pd
from .database_utils import *

def app():
    login = st.text_input("Login:")
    access_token = st.text_input("Password:", type="password")
    button = st.button("Log in")
    if button:
        if access_token == st.secrets["users"][login]:
            col1, col2 = st.columns([1, 8])
            with col2:
                    st.header('–†–µ–¥–∞–∫—Ç–æ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
            with col1:
                    st.markdown(
                        "<h1 style='text-align: center; font-size: 300%'>üíª</h1>",
                        unsafe_allow_html=True)
            with st.expander("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"):
                st.markdown("–í —Ç–∞–±–ª–∏—Ü–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç–æ–ª–±—Ü—ã —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏:")
                st.markdown("**Language**: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —è–∑—ã–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–æ **–ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏** —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ WALS –∏ –¥—Ä—É–≥–∏—Ö –±–∞–∑–∞—Ö.")
                st.markdown("**Field**: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è (–Ω–∞ —Ä—É—Å—Å–∫–æ–º), –Ω–∞–ø—Ä–∏–º–µ—Ä, *–º–µ–Ω—è—Ç—å*.")
                st.markdown("**Frame**: –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º).")
                st.markdown("**Context**: –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ—Ä–µ–π–º–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º).")
                st.markdown("**Verb**: –≥–ª–∞–≥–æ–ª, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π—Å—è –≤ –ø—Ä–∏–º–µ—Ä–µ (–Ω–∞ –í–∞—à–µ–º —è–∑—ã–∫–µ).")
                st.markdown("**Example**: –ø—Ä–∏–º–µ—Ä –Ω–∞ –Ω—É–∂–Ω—ã–π –º–∏–∫—Ä–æ—Ñ—Ä–µ–π–º.")
                st.markdown("**Translation**: –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π.")
                st.markdown("**Speakers**: –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —á–∏—Å–ª–æ –Ω–æ—Å–∏—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∑–≤–∞–ª–∏ —ç—Ç–æ—Ç –≥–ª–∞–≥–æ–ª.")

            format = st.radio('How to upload?', ['Fill in a form', 'Upload a table'])
            if format == "Fill in a form":
                data = fill_in_form("my_form")
                df = pd.DataFrame(data)
                db = init_connection()
                add_data(db, df)
            else:
                upload_file = st.file_uploader('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª')
                columns = ["Language", "Field", "Frame", "Context",
                           "Verb", "Example", "Translation"]
                if (upload_file is not None) and upload_file.name.endswith(".csv"):
                    if set(upload_file.columns) == set(columns):
                        db = init_connection()
                        add_data(db, upload_file)
                    else:
                        missing_cols = set(columns).difference(set(upload_file.columns))
                        st.markdown(f"The columns {*missing_cols} are missing. Upload a new file.")
                else:
                    st.markdown('–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–∞–π–ª')
        else:
            st.write("Sorry, your token is invalid. Please try again or contact the administrator.")
